<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.learn.xml.bootxmlorderserviceconsumer.service"/>
    <!-- consumer's application name, used for tracing dependency relationship (not a matching criterion),
    don't set it same as provider -->
    <dubbo:application name="order-service-consumer"/>
    <!-- use multicast registry center to discover service -->
    <dubbo:registry address="zookeeper://192.168.43.177:2181"/>
    <!-- 消费者需要引用的接口
        check=false  关闭启动时检查  否则启动会抛出错误No provider available for the service
    -->
    <dubbo:reference id="userService" interface="com.learn.service.UserService"/>

    <dubbo:consumer check="false"/>
    <!--自动发现监控中心-->
    <dubbo:monitor protocol="registry"/>
</beans>